Tips of FreeFlow
==================

FreeFlow論文読みの中で出てきた単語などの意味を整理する。

Network Namespace
------------------

OSのネットワークスタック（ルーティングテーブルやiptablesを含むネットワーク設定）を分離して管理できるLinuxカーネルの機能。
Dockerなどのコンテナ環境でも、Host環境とContainer環境でリソースを隔離するために利用されている、らしい。

SR-IOV (Single Root I/O Virtualization)
-------------------------------------------

SR-IOVはハードウェアベースの仮想化技術である。（つまりハードウェアオフロードされている）
SR-IOV により仮想マシン間での PCIe デバイスの効率的な共有を可能にする。

SR-IOV対応の物理デバイスをPF、物理デバイス側で論理分割されているPCIデバイス（実際はPCIと仮想マシン間のメモリコピーのみをおこなう軽量PCIのようなもの）をVFと呼ぶ
気持ちとしてはPCIを多重化し、複数の仮想マシンにパススルーする事ができる技術。

マイグレーションなどに動的に対応することができないデメリットがあるものの、多くのメリットが有る。
1. 仮想スイッチをバイパス可能のため、VMMに負荷をかけることなく通信可能。おそらくレイテンシも向上する。
2. PCIデバイスと仮想マシンの対応が1:Nになる。（Nに上限はあるが）

IPC（Inter Process Communication）
-----------------------------------

プロセス間でのデータのやり取りの総称。
IPCにはいくつか分類が存在する。

1. 通信 : プロセス間でのデータ通信、交換に関する機構
2. 同期 : プロセス、スレッド間の同期に関する機構
3. シグナル : 特殊だが、条件によっては同期にも通信にも利用可能

今回ではこの中で特にプロセス間通信（FFLとFFRの通信チャネル）の話が出てきたため、それに主眼を置く。
実際にプロセス間でデータを交換する方法はいくつか存在し、

1. ファイル
2. ソケット
3. パイプ
4. セマフォ
5. 共有メモリ

などがあるが今回は共有メモリについて議論する。（論文ではUnix domain socketによる実装の話もあったがおそらく最終的に利用されていないので飛ばす）

共有メモリ
^^^^^^^^^^^

プロセス間で同じメモリを共有する。高速。
ただし、２つのプロセスから書き込みが発生すると競合するなどは考慮すべき点である。


Infiniband Verbs
-------------------

基本的には `Infinibandプログラムに必要な概念`_ を参考にするといい。

.. _Infinibandプログラムに必要な概念: http://www.nminoru.jp/~nminoru/network/infiniband/iba-concept.html#intro
